$date
	Thu Feb 29 17:17:05 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module arbiter_round_robin $end
$var wire 1 ! i_block_arb $end
$var wire 1 " i_clk $end
$var wire 6 # i_req [5:0] $end
$var wire 1 $ i_rst_n $end
$var wire 6 % w_req_masked [5:0] $end
$var wire 1 & w_vld_ffs_reqm $end
$var wire 1 ' w_vld_ffs_req $end
$var wire 4 ( w_reqm_location [3:0] $end
$var wire 6 ) w_req_win_mask [5:0] $end
$var wire 6 * w_req_post [5:0] $end
$var wire 4 + w_req_location [3:0] $end
$var reg 6 , o_gnt [5:0] $end
$var reg 6 - r_mask [5:0] $end
$var reg 6 . r_win_mask_only [5:0] $end
$var reg 1 / w_win_vld $end
$var reg 4 0 w_winner [3:0] $end
$scope module u_req_leading_one_trailing_one $end
$var wire 6 1 i_data [5:0] $end
$var wire 1 2 ow_all_zeroes $end
$var wire 1 ' ow_valid $end
$var wire 4 3 ow_trailingone [3:0] $end
$var wire 4 4 ow_leadingone [3:0] $end
$var wire 1 5 ow_all_ones $end
$var reg 6 6 ow_leadingone_vector [5:0] $end
$var reg 6 7 ow_trailingone_vector [5:0] $end
$scope module u_find_first_set $end
$var wire 6 8 i_data [5:0] $end
$var reg 4 9 ow_index [3:0] $end
$scope function find_set_index $end
$scope begin $ivl_for_loop0 $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_find_last_set $end
$var wire 6 : i_data [5:0] $end
$var reg 4 ; ow_index [3:0] $end
$scope function find_last_set_index $end
$scope begin $ivl_for_loop1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_reqm_leading_one_trailing_one $end
$var wire 6 < i_data [5:0] $end
$var wire 1 = ow_all_zeroes $end
$var wire 1 & ow_valid $end
$var wire 4 > ow_trailingone [3:0] $end
$var wire 4 ? ow_leadingone [3:0] $end
$var wire 1 @ ow_all_ones $end
$var reg 6 A ow_leadingone_vector [5:0] $end
$var reg 6 B ow_trailingone_vector [5:0] $end
$scope module u_find_first_set $end
$var wire 6 C i_data [5:0] $end
$var reg 4 D ow_index [3:0] $end
$scope function find_set_index $end
$scope begin $ivl_for_loop0 $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_find_last_set $end
$var wire 6 E i_data [5:0] $end
$var reg 4 F ow_index [3:0] $end
$scope function find_last_set_index $end
$scope begin $ivl_for_loop1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
0@
b0 ?
b0 >
1=
b0 <
b0 ;
bz :
b0 9
bz 8
b0 7
b0 6
x5
b0 4
b0 3
x2
bz 1
b0 0
0/
b0 .
b0 -
b0 ,
b0 +
bz *
bz )
b0 (
x'
0&
b0 %
0$
bz #
1"
0!
$end
#5000
0"
#10000
1"
#15000
1$
0"
#20000
b111111 .
1"
#25000
02
1/
05
1'
b1 )
b1 1
b1 8
b1 :
b1 *
b1 #
0"
#30000
b1 ,
b111110 .
1"
#35000
b1 7
b1 6
b1 0
b1 4
b1 9
b1 +
b1 3
b1 ;
b10 )
b10 1
b10 8
b10 :
b10 *
b10 #
0"
#40000
b111101 .
b1 -
b10 ,
1"
#45000
b10 7
b10 6
b10 0
b10 4
b10 9
b10 +
b10 3
b10 ;
b100 )
b100 1
b100 8
b100 :
b100 *
b100 #
0"
#50000
b100 ,
b11 -
b111011 .
1"
#55000
b100 7
b100 6
b11 0
b11 4
b11 9
b11 +
b11 3
b11 ;
b1000 )
b1000 1
b1000 8
b1000 :
b1000 *
b1000 #
0"
#60000
b110111 .
b111 -
b1000 ,
1"
#65000
b1000 7
b1000 6
b100 0
b100 4
b100 9
b100 +
b100 3
b100 ;
b10000 )
b10000 1
b10000 8
b10000 :
b10000 *
b10000 #
0"
#70000
b10000 ,
b1111 -
b101111 .
1"
#75000
b10000 7
b10000 6
b101 0
b101 4
b101 9
b101 +
b101 3
b101 ;
b100000 )
b100000 1
b100000 8
b100000 :
b100000 *
b100000 #
0"
#80000
b11111 .
b11111 -
b100000 ,
1"
#85000
b1 B
0=
02
b1 7
b0 6
b1 (
b1 >
b1 F
b1 0
b0 4
b0 9
b1 +
b1 3
b1 ;
1&
b11 %
b11 <
b11 C
b11 E
1'
b11 )
b11 1
b11 8
b11 :
b11 *
b11 #
0"
#90000
b0 B
b0 0
b0 +
b0 3
b0 ;
b0 7
b0 (
b0 >
b0 F
b1 )
b1 1
b1 8
b1 :
b1 %
b1 <
b1 C
b1 E
b10 ,
b1 -
b111101 .
1"
#95000
b10 7
b10 6
b10 0
b10 4
b10 9
b10 +
b10 3
b10 ;
b100 )
b100 1
b100 8
b100 :
1=
0&
b0 %
b0 <
b0 C
b0 E
b110 *
b110 #
0"
#100000
b1 4
b1 9
b1 +
b1 3
b1 ;
b10 )
b10 1
b10 8
b10 :
0=
b1 B
b1 A
b1 0
b1 7
b1 6
b1 ?
b1 D
b1 (
b1 >
b1 F
1&
b10 %
b10 <
b10 C
b10 E
b111011 .
b11 -
b100 ,
1"
#105000
b11 0
b11 4
b11 9
b11 +
b11 3
b11 ;
b1000 )
b1000 1
b1000 8
b1000 :
1=
b0 B
b0 A
b100 7
b100 6
b0 ?
b0 D
b0 (
b0 >
b0 F
0&
b0 %
b0 <
b0 C
b0 E
b1100 *
b1100 #
0"
#110000
0=
b10 B
b10 A
b10 0
b10 4
b10 9
b10 +
b10 3
b10 ;
b10 7
b10 6
b10 ?
b10 D
b10 (
b10 >
b10 F
b100 )
b100 1
b100 8
b100 :
1&
b100 %
b100 <
b100 C
b100 E
b1000 ,
b111 -
b110111 .
1"
#115000
b100 0
b100 4
b100 9
b100 +
b100 3
b100 ;
b10000 )
b10000 1
b10000 8
b10000 :
1=
b0 B
b0 A
b1000 7
b1000 6
b0 ?
b0 D
b0 (
b0 >
b0 F
0&
b0 %
b0 <
b0 C
b0 E
b11000 *
b11000 #
0"
#120000
b11 4
b11 9
b11 +
b11 3
b11 ;
b1000 )
b1000 1
b1000 8
b1000 :
0=
b100 B
b100 A
b11 0
b100 7
b100 6
b11 ?
b11 D
b11 (
b11 >
b11 F
1&
b1000 %
b1000 <
b1000 C
b1000 E
b101111 .
b1111 -
b10000 ,
1"
#125000
b101 0
b101 4
b101 9
b101 +
b101 3
b101 ;
b100000 )
b100000 1
b100000 8
b100000 :
1=
b0 B
b0 A
b10000 7
b10000 6
b0 ?
b0 D
b0 (
b0 >
b0 F
0&
b0 %
b0 <
b0 C
b0 E
b110000 *
b110000 #
0"
#130000
0=
b1000 B
b1000 A
b100 0
b100 4
b100 9
b100 +
b100 3
b100 ;
b1000 7
b1000 6
b100 ?
b100 D
b100 (
b100 >
b100 F
b10000 )
b10000 1
b10000 8
b10000 :
1&
b10000 %
b10000 <
b10000 C
b10000 E
b100000 ,
b11111 -
b11111 .
1"
#135000
b0 4
b0 9
b1000 B
b0 A
b11111 )
b11111 1
b11111 8
b11111 :
b1000 7
b0 6
b0 ?
b0 D
b11111 %
b11111 <
b11111 C
b11111 E
b111111 *
b111111 #
0"
#140000
b101 +
b101 3
b101 ;
b100 B
b11 0
b101111 )
b101111 1
b101111 8
b101111 :
b10000 7
b11 (
b11 >
b11 F
b1111 %
b1111 <
b1111 C
b1111 E
b101111 .
b1111 -
b10000 ,
1"
#145000
0"
#145001
12
1=
b0 B
0/
b0 0
b0 +
b0 3
b0 ;
b0 7
b0 (
b0 >
b0 F
0'
b0 )
b0 1
b0 8
b0 :
0&
b0 %
b0 <
b0 C
b0 E
b0 ,
b0 -
b0 .
0$
1"
#150001
0"
#155001
1"
#160001
1$
0"
#165001
02
b10000 7
1/
b101 0
b101 +
b101 3
b101 ;
15
1'
b111111 )
b111111 1
b111111 8
b111111 :
b111111 .
1"
#170001
b0 7
b0 0
b0 +
b0 3
b0 ;
05
b1 )
b1 1
b1 8
b1 :
b1 *
b1 #
0"
#175001
b111110 .
b1 ,
1"
#180001
b1 7
b1 6
b1 0
b1 4
b1 9
b1 +
b1 3
b1 ;
b10 )
b10 1
b10 8
b10 :
b10 *
b10 #
0"
#185001
b10 ,
b1 -
b111101 .
1"
#190001
b10 7
b10 6
b10 0
b10 4
b10 9
b10 +
b10 3
b10 ;
b100 )
b100 1
b100 8
b100 :
b100 *
b100 #
0"
#195001
b111011 .
b11 -
b100 ,
1"
#200001
b100 7
b100 6
b11 0
b11 4
b11 9
b11 +
b11 3
b11 ;
b1000 )
b1000 1
b1000 8
b1000 :
b1000 *
b1000 #
0"
#205001
b1000 ,
b111 -
b110111 .
1"
#210001
b1000 7
b1000 6
b100 0
b100 4
b100 9
b100 +
b100 3
b100 ;
b10000 )
b10000 1
b10000 8
b10000 :
b10000 *
b10000 #
0"
#215001
b101111 .
b1111 -
b10000 ,
1"
#220001
b10000 7
b10000 6
b101 0
b101 4
b101 9
b101 +
b101 3
b101 ;
b100000 )
b100000 1
b100000 8
b100000 :
b100000 *
b100000 #
0"
#225001
b100000 ,
b11111 -
b11111 .
1"
#230001
b1 B
0=
02
b1 7
b0 6
b1 (
b1 >
b1 F
b1 0
b0 4
b0 9
b1 +
b1 3
b1 ;
1&
b11 %
b11 <
b11 C
b11 E
1'
b11 )
b11 1
b11 8
b11 :
b11 *
b11 #
0"
#235001
b0 +
b0 3
b0 ;
b0 B
b0 0
b1 )
b1 1
b1 8
b1 :
b0 7
b0 (
b0 >
b0 F
b1 %
b1 <
b1 C
b1 E
b111101 .
b1 -
b10 ,
1"
#240001
b10 7
b10 6
b10 0
b10 4
b10 9
b10 +
b10 3
b10 ;
b100 )
b100 1
b100 8
b100 :
1=
0&
b0 %
b0 <
b0 C
b0 E
b110 *
b110 #
0"
#245001
0=
b1 B
b1 A
b1 0
b1 4
b1 9
b1 +
b1 3
b1 ;
b1 7
b1 6
b1 ?
b1 D
b1 (
b1 >
b1 F
b10 )
b10 1
b10 8
b10 :
1&
b10 %
b10 <
b10 C
b10 E
b100 ,
b11 -
b111011 .
1"
#250001
b11 0
b11 4
b11 9
b11 +
b11 3
b11 ;
b1000 )
b1000 1
b1000 8
b1000 :
1=
b0 B
b0 A
b100 7
b100 6
b0 ?
b0 D
b0 (
b0 >
b0 F
0&
b0 %
b0 <
b0 C
b0 E
b1100 *
b1100 #
0"
#255001
b10 4
b10 9
b10 +
b10 3
b10 ;
b100 )
b100 1
b100 8
b100 :
0=
b10 B
b10 A
b10 0
b10 7
b10 6
b10 ?
b10 D
b10 (
b10 >
b10 F
1&
b100 %
b100 <
b100 C
b100 E
b110111 .
b111 -
b1000 ,
1"
#260001
b100 0
b100 4
b100 9
b100 +
b100 3
b100 ;
b10000 )
b10000 1
b10000 8
b10000 :
1=
b0 B
b0 A
b1000 7
b1000 6
b0 ?
b0 D
b0 (
b0 >
b0 F
0&
b0 %
b0 <
b0 C
b0 E
b11000 *
b11000 #
0"
#265001
0=
b100 B
b100 A
b11 0
b11 4
b11 9
b11 +
b11 3
b11 ;
b100 7
b100 6
b11 ?
b11 D
b11 (
b11 >
b11 F
b1000 )
b1000 1
b1000 8
b1000 :
1&
b1000 %
b1000 <
b1000 C
b1000 E
b10000 ,
b1111 -
b101111 .
1"
#270001
b101 0
b101 4
b101 9
b101 +
b101 3
b101 ;
b100000 )
b100000 1
b100000 8
b100000 :
1=
b0 B
b0 A
b10000 7
b10000 6
b0 ?
b0 D
b0 (
b0 >
b0 F
0&
b0 %
b0 <
b0 C
b0 E
b110000 *
b110000 #
0"
#275001
b100 4
b100 9
b100 +
b100 3
b100 ;
b10000 )
b10000 1
b10000 8
b10000 :
0=
b1000 B
b1000 A
b100 0
b1000 7
b1000 6
b100 ?
b100 D
b100 (
b100 >
b100 F
1&
b10000 %
b10000 <
b10000 C
b10000 E
b11111 .
b11111 -
b100000 ,
1"
#280001
b0 4
b0 9
b1000 B
b0 A
b11111 )
b11111 1
b11111 8
b11111 :
b1000 7
b0 6
b0 ?
b0 D
b11111 %
b11111 <
b11111 C
b11111 E
b111111 *
b111111 #
0"
#285001
b100 B
b11 0
b101 +
b101 3
b101 ;
b10000 7
b11 (
b11 >
b11 F
b101111 )
b101111 1
b101111 8
b101111 :
b1111 %
b1111 <
b1111 C
b1111 E
b10000 ,
b1111 -
b101111 .
1"
#290001
0"
#290002
