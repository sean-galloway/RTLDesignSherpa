@startuml ar_arbiter_fsm

title AR Channel Arbiter FSM (Per-Slave Instance)

[*] --> IDLE : Reset / Power-On

state IDLE {
  IDLE : Entry: ar_grant_matrix[s] = 0
  IDLE : Entry: ar_grant_active[s] = 0
  IDLE : Wait for master AR requests
  IDLE : Round-robin priority tracking: ar_last_grant[s]
}

state GRANT_ACTIVE {
  GRANT_ACTIVE : Entry: Grant issued to winning master
  GRANT_ACTIVE : Entry: ar_grant_matrix[s][m] = 1
  GRANT_ACTIVE : Entry: ar_grant_active[s] = 1
  GRANT_ACTIVE : Grant locked until handshake completes
  GRANT_ACTIVE : ARVALID && ARREADY → transaction complete
}

IDLE --> GRANT_ACTIVE : |ar_request_matrix[s]| > 0\nRound-robin arbitration\nSelects next master
GRANT_ACTIVE --> IDLE : m_axi_arvalid[s] &&\nm_axi_arready[s]\n(AR handshake complete)

note right of IDLE
  **Round-Robin Arbitration:**
  Priority rotates after each grant:
  - Start search from (ar_last_grant[s] + 1)
  - Find first requesting master
  - Update ar_last_grant[s] = winning master

  **Fairness Guarantee:**
  - No master starvation
  - All masters get equal opportunity
  - Same algorithm as AW arbiter
end note

note right of GRANT_ACTIVE
  **Grant Locking:**
  - Grant held until AR handshake completes
  - R channel follows AR grant (read data locked)
  - R channel uses ID table for response routing

  **Independent from AW Arbitration:**
  - Read requests processed independently
  - No dependency on write path status
  - Enables read/write parallelism
end note

note left of GRANT_ACTIVE
  **Address Phase Handshake:**

  AR transaction completes when:
    ARVALID = 1 (from master)
    ARREADY = 1 (from slave)
    Rising edge of clock

  After handshake:
  - Grant released
  - Arbiter returns to IDLE
  - Ready for next read request
end note

note bottom of ar_arbiter_fsm
  **Key Differences from AW Arbiter:**

  **Similarities:**
  - Same 2-state structure (IDLE ↔ GRANT_ACTIVE)
  - Same round-robin algorithm
  - Same grant locking mechanism

  **Differences:**
  - Operates on AR channel (read address)
  - Independent FSM instance per slave
  - R channel data path follows AR grant
  - No interaction with write path

  **Total FSM Count:**
  - AW arbiters: NUM_SLAVES instances
  - AR arbiters: NUM_SLAVES instances
  - Total: 2 × NUM_SLAVES FSMs
end note

@enduml
