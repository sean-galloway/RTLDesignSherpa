// Graphviz Block Diagram: axi_data_upsize
// Purpose: Narrow-to-Wide Data Width Converter (Accumulator)
// Module: axi_data_upsize.sv

digraph axi_data_upsize {
    rankdir=LR;
    newrank=true;
    splines=ortho;
    nodesep=0.8;
    ranksep=1.2;

    // Graph attributes
    graph [fontname="Arial", fontsize=10, label="axi_data_upsize - Narrow→Wide Accumulator\n128→512 Example (4:1 ratio)", labelloc=t];
    node [fontname="Arial", fontsize=9, shape=box, style=filled];
    edge [fontname="Arial", fontsize=8];

    // Module parameters
    subgraph cluster_params {
        label="Parameters";
        style=filled;
        fillcolor=lightyellow;

        params [shape=note, fillcolor=lightyellow, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4">
<TR><TD COLSPAN="2"><B>Configuration</B></TD></TR>
<TR><TD ALIGN="LEFT">NARROW_WIDTH</TD><TD ALIGN="RIGHT">128</TD></TR>
<TR><TD ALIGN="LEFT">WIDE_WIDTH</TD><TD ALIGN="RIGHT">512</TD></TR>
<TR><TD ALIGN="LEFT">RATIO</TD><TD ALIGN="RIGHT">4:1</TD></TR>
<TR><TD ALIGN="LEFT">NARROW_SB_WIDTH</TD><TD ALIGN="RIGHT">16</TD></TR>
<TR><TD ALIGN="LEFT">WIDE_SB_WIDTH</TD><TD ALIGN="RIGHT">64</TD></TR>
<TR><TD ALIGN="LEFT">SB_OR_MODE</TD><TD ALIGN="RIGHT">0 (concat)</TD></TR>
<TR><TD COLSPAN="2" BGCOLOR="lightgreen"><B>Throughput: 100%</B></TD></TR>
</TABLE>>];
    }

    // Input interface
    subgraph cluster_input {
        label="Narrow Input Interface\n(128-bit beats)";
        style=filled;
        fillcolor=lightblue;

        input [shape=record, fillcolor=lightblue, label="{Narrow Input|{valid|ready}|{data [127:0]}|{sideband [15:0]}|{last}}"];
    }

    // Accumulator logic
    subgraph cluster_accumulator {
        label="Accumulation Logic";
        style=filled;
        fillcolor=lightgray;

        counter [shape=box, fillcolor=white, label="Beat Counter\n(0→3)"];
        buffer [shape=cylinder, fillcolor=white, label="Data Buffer\n512-bit\nRegister"];
        sb_buffer [shape=cylinder, fillcolor=white, label="Sideband Buffer\n64-bit\nRegister"];
        control [shape=diamond, fillcolor=white, label="Full?\n(count==3)"];

        counter -> control;
        control -> buffer [label="accumulate"];
        buffer -> sb_buffer [style=dashed];
    }

    // Output interface
    subgraph cluster_output {
        label="Wide Output Interface\n(512-bit beats)";
        style=filled;
        fillcolor=lightcoral;

        output [shape=record, fillcolor=lightcoral, label="{Wide Output|{valid|ready}|{data [511:0]}|{sideband [63:0]}|{last}}"];
    }

    // Data flow
    input -> counter [label="  narrow_valid\n  narrow_ready"];
    counter -> buffer [label="  beat[0] → [127:0]\n  beat[1] → [255:128]\n  beat[2] → [383:256]\n  beat[3] → [511:384]"];
    buffer -> output [label="  wide_valid\n  wide_ready"];

    // Sideband flow
    input -> sb_buffer [style=dashed, color=blue, label="  strb[15:0] → [15:0]\n  strb[15:0] → [31:16]\n  strb[15:0] → [47:32]\n  strb[15:0] → [63:48]"];
    sb_buffer -> output [style=dashed, color=blue];

    // Annotations
    note1 [shape=note, fillcolor=lightyellow, label="Accumulates 4 narrow beats\ninto 1 wide beat"];
    note2 [shape=note, fillcolor=lightgreen, label="100% throughput:\nCan accept narrow while\noutputting wide"];
    note3 [shape=note, fillcolor=lightcyan, label="SB_OR_MODE=0: Concatenate\nSB_OR_MODE=1: OR together"];

    // Legend
    subgraph cluster_legend {
        label="Signal Types";
        style=filled;
        fillcolor=white;

        legend [shape=plaintext, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="2">
<TR><TD>━━━</TD><TD ALIGN="LEFT">Data path</TD></TR>
<TR><TD>┄┄┄</TD><TD ALIGN="LEFT">Sideband (WSTRB/RRESP)</TD></TR>
</TABLE>>];
    }
}
