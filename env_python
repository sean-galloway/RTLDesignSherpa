#!/bin/bash
# Load project-specific environment for Python + RTL tools
source venv/bin/activate 

# Ensure this is sourced: `source env_python` (don't just run it)

# Set the root of the git repo as REPO_ROOT
# export REPO_ROOT=$(git rev-parse --show-toplevel)
export REPO_ROOT=/mnt/data/github/rtldesignsherpa/

# Add Verible binaries to PATH
export PATH="$PATH:/home/seang/github/verible-v0.0-3999-g93adb37c/bin/"

# Add REPO-specific tools to PATH
export PATH="$REPO_ROOT/bin:$PATH"
export PATH="$REPO_ROOT/bin/vcd2wavedrom2:$PATH"
export PATH="$REPO_ROOT/bin/rtl_generators/axi:$PATH"
export PATH="$REPO_ROOT/venv/bin/yowasp-yosys:$PATH"  # optional: should this be in $REPO_ROOT/bin?

# Add Python modules to PYTHONPATH
export PYTHONPATH="$REPO_ROOT/bin:$PYTHONPATH"
export PYTHONPATH="$REPO_ROOT/bin/rtl_generators:$PYTHONPATH"
export PYTHONPATH="$REPO_ROOT/bin/val_project:$PYTHONPATH"
export PYTHONPATH="$REPO_ROOT/bin/vcd2wavedrom2:$PYTHONPATH"
export PYTHONPATH="$REPO_ROOT/bin/rtl_generators/axi:$PYTHONPATH"

# Add STREAM DV directory for self-contained project imports
export PYTHONPATH="$REPO_ROOT/projects/components/stream/dv:$PYTHONPATH"

# Add RAPIDS DV directory for self-contained project imports
export PYTHONPATH="$REPO_ROOT/projects/components/rapids/dv:$PYTHONPATH"

# Add DELTA DV directory for self-contained project imports
export PYTHONPATH="$REPO_ROOT/projects/components/delta/dv:$PYTHONPATH"

# Add BRIDGE DV directory for self-contained project imports
export PYTHONPATH="$REPO_ROOT/projects/components/bridge/dv:$PYTHONPATH"

# Set default simulation tool
export SIM=verilator

# Optional: Print summary (can be toggled off later)
echo "[env_python] Environment configured for REPO_ROOT=$REPO_ROOT"


