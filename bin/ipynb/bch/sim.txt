
Help text file for bch.exe program that generate binary (n,k) BCH code.

bch.exe program uses following input files:
bch.in - to specify input parameters of BCH code, only this file 
	should be changed (if the bch.exe cannot find bch.in file then
	it requests the user to type BCH code and program parameters
bch.vht - data needed to generate enc.vhd and sim.vhd and sim.txt files
bch1.vht - data needed to generate dec.vhd if t (no. of errors) = 1
bch2.vht - data needed to generate dec.vhd if t = 2
bch3.vht - data needed to generate dec.vhd if t > 2
bchs.vht - data needed to generate sym.cmd and sym.cme

bch.exe generates (overwrites !!!) following files:
const.vhd - VHDL package file that contains useful constants
enc.vhd - VHDL file for generating BCH code encoder
dec.vhd - VHDL file for generating BCH code decoder
sim.vhd - VHDL file for generating file for simulation encoder and decoder
sim.cmd - command file for simulation before synthesis
sim.cme - command file for simulation after synthesis

bch.in file should consists of following:
m= xx - specify width of Galois Field GF(2^m), n=2^m-1
t= xx - specify number of errors to be may corrected
program option (placed in bch.in):
-oxx - for t>2 circuit option;
	xx = 2 - parallel architecture
	xx = 3 - serial architecture - preferred.
-sxx - generate sym.cmd and sym.cme with specified 
	by xx simulation time (number of codewords to simulate)
	xx=0 - do not generate simulation command files.
-ix - xx - interleave number. The frequency of Berlekamp-Massey 
	Algorithm in comparison to data transfer (syndrome calculation) frequency.
	f_BMA = interleave * f_syn
-mxx - design optimization by extracting
	xx= 0 -  without optimisation
	xx= 1,2... - with optimization - introduce a new intermediate
		signal only if it reduces the number of XOR at least by xx



There are following BCH codes for m= 5 and t<=2. (n,k,t)
(31, 26, 1) 	(31, 21, 2) 	



	---------------- ENCODER----------------

ering - LFSR Linear Feedback Shift Registers
		Reg= 10		XOR= 5
ecount - counter (control system)
		Reg= 6		XOR= 1
ENCODER --
		Reg= 1		XOR= 0
	total	Reg= 17		XOR= 6




	-------------- DECODER ---------------

ffce - flip flop register
		Reg= 1		XOR= 0
dcount - counter - control system
		Reg= 5		XOR= 1
dbuf - buffer for data to be corrected
		Reg= 33		XOR= 1

----SYNDROMES----
dsyn1 - syndromes  1
		Reg= 5		XOR= 2
dsyn3 - syndromes  3
		Reg= 5		XOR= 4
SYNDROMES -- total
	total	Reg= 10		XOR= 6

---- Chien search ----
dpow3 - dout<= din^3
		Reg= 0		XOR= 21
dcheq - comparison dout<= din^3
		Reg= 0		XOR= 5
	total	Reg= 0		XOR= 26
dch1 - Chien Search for x^1
		Reg= 5		XOR= 1
dch3 - Chien Search for x^3
		Reg= 5		XOR= 3
CHIEN'S SEARCH - total including dcheq
	total	Reg= 10		XOR= 30

------ DECODER ------
	total	Reg= 59		XOR= 38



GF(2^5) generated by polynomial: 1 + x^2 + x^5
  no.  Standard    Dual basis
   -   00000     00000
   0   10000     00000
   1   01000     00000
   2   00100     00000
   3   00010     00000
   4   00001     00000
   5   10100     00000
   6   01010     00000
   7   00101     00000
   8   10110     00000
   9   01011     00000
  10   10001     00000
  11   11100     00000
  12   01110     00000
  13   00111     00000
  14   10111     00000
  15   11111     00000
  16   11011     00000
  17   11001     00000
  18   11000     00000
  19   01100     00000
  20   00110     00000
  21   00011     00000
  22   10101     00000
  23   11110     00000
  24   01111     00000
  25   10011     00000
  26   11101     00000
  27   11010     00000
  28   01101     00000
  29   10010     00000
  30   01001     00000
  31   10000     00000