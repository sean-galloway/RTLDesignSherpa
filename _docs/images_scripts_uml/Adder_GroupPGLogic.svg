<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="850px" preserveAspectRatio="none" style="width:570px;height:850px;background:#FFFFFF;" version="1.1" viewBox="0 0 570 850" width="570px" zoomAndPan="magnify"><defs/><g><!--MD5=[2b7409a316d9d2e410653e6983353aed]
class Module--><g id="elem_Module"><rect codeLine="2" fill="#F1F1F1" height="390.2344" id="Module" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="436" x="7" y="453"/><ellipse cx="195.25" cy="469" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M198.2188,474.6406 Q197.6406,474.9375 197,475.0781 Q196.3594,475.2344 195.6563,475.2344 Q193.1563,475.2344 191.8281,473.5938 Q190.5156,471.9375 190.5156,468.8125 Q190.5156,465.6875 191.8281,464.0313 Q193.1563,462.375 195.6563,462.375 Q196.3594,462.375 197,462.5313 Q197.6563,462.6875 198.2188,462.9844 L198.2188,465.7031 Q197.5938,465.125 197,464.8594 Q196.4063,464.5781 195.7813,464.5781 Q194.4375,464.5781 193.75,465.6563 Q193.0625,466.7188 193.0625,468.8125 Q193.0625,470.9063 193.75,471.9844 Q194.4375,473.0469 195.7813,473.0469 Q196.4063,473.0469 197,472.7813 Q197.5938,472.5 198.2188,471.9219 L198.2188,474.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="215.75" y="473.8467">Module</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="442" y1="485" y2="485"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="495.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="27" y="501.9951">start_instructions: list</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="511.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="27" y="518.292">instructions: list</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="528.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="27" y="534.5889">end_instructions: list</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="544.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="27" y="550.8857">module_name: str</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="560.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="27" y="567.1826">instance_name: str</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="577.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="27" y="583.4795">params: Param</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="593.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="27" y="599.7764">ports: Signal</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="609.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="27" y="616.0732">wires: list</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="442" y1="623.375" y2="623.375"/><ellipse cx="18" cy="637.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="375" x="27" y="640.3701">__init__(module_name: str = '', instance_name: str = '')</text><ellipse cx="18" cy="653.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="27" y="656.667">add_port_string(ports: str): void</text><ellipse cx="18" cy="669.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="27" y="672.9639">wire(name: str, _type: str): void</text><ellipse cx="18" cy="685.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="27" y="689.2607">start(): void</text><ellipse cx="18" cy="702.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="27" y="705.5576">end(): void</text><ellipse cx="18" cy="718.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="27" y="721.8545">stmt_assign(lhs: str, rhs: str): void</text><ellipse cx="18" cy="734.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="220" x="27" y="738.1514">instruction(instruction: str): void</text><ellipse cx="18" cy="751.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="27" y="754.4482">comment(c: str): void</text><ellipse cx="18" cy="767.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="257" x="27" y="770.7451">write(file_path: str, filename: str): void</text><ellipse cx="18" cy="783.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="410" x="27" y="787.042">instantiate(instance_name: str, inputs: list, outputs: list): str</text><ellipse cx="18" cy="799.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="27" y="803.3389">__str__(): str</text><ellipse cx="18" cy="816.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="27" y="819.6357">in_connector(port: str, connector: str): dict</text><ellipse cx="18" cy="832.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="27" y="835.9326">out_connector(port: str, connector: str): dict</text></g><!--MD5=[365150d8163e865a226452c70cc7ad9f]
class Black--><g id="elem_Black"><rect codeLine="3" fill="#F1F1F1" height="80.5938" id="Black" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="202" x="124" y="311"/><ellipse cx="202.25" cy="327" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M205.2188,332.6406 Q204.6406,332.9375 204,333.0781 Q203.3594,333.2344 202.6563,333.2344 Q200.1563,333.2344 198.8281,331.5938 Q197.5156,329.9375 197.5156,326.8125 Q197.5156,323.6875 198.8281,322.0313 Q200.1563,320.375 202.6563,320.375 Q203.3594,320.375 204,320.5313 Q204.6563,320.6875 205.2188,320.9844 L205.2188,323.7031 Q204.5938,323.125 204,322.8594 Q203.4063,322.5781 202.7813,322.5781 Q201.4375,322.5781 200.75,323.6563 Q200.0625,324.7188 200.0625,326.8125 Q200.0625,328.9063 200.75,329.9844 Q201.4375,331.0469 202.7813,331.0469 Q203.4063,331.0469 204,330.7813 Q204.5938,330.5 205.2188,329.9219 L205.2188,332.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="37" x="222.75" y="331.8467">Black</text><line style="stroke:#181818;stroke-width:0.5;" x1="125" x2="325" y1="343" y2="343"/><line style="stroke:#181818;stroke-width:0.5;" x1="125" x2="325" y1="351" y2="351"/><ellipse cx="135" cy="364.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="144" y="367.9951">Black()</text><ellipse cx="135" cy="380.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="144" y="384.292">verilog(file_path: str): void</text></g><!--MD5=[fa0ec411bd672e54a5650440425fcb69]
class Gray--><g id="elem_Gray"><rect codeLine="3" fill="#F1F1F1" height="80.5938" id="Gray" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="202" x="361" y="311"/><ellipse cx="442.25" cy="327" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M445.2188,332.6406 Q444.6406,332.9375 444,333.0781 Q443.3594,333.2344 442.6563,333.2344 Q440.1563,333.2344 438.8281,331.5938 Q437.5156,329.9375 437.5156,326.8125 Q437.5156,323.6875 438.8281,322.0313 Q440.1563,320.375 442.6563,320.375 Q443.3594,320.375 444,320.5313 Q444.6563,320.6875 445.2188,320.9844 L445.2188,323.7031 Q444.5938,323.125 444,322.8594 Q443.4063,322.5781 442.7813,322.5781 Q441.4375,322.5781 440.75,323.6563 Q440.0625,324.7188 440.0625,326.8125 Q440.0625,328.9063 440.75,329.9844 Q441.4375,331.0469 442.7813,331.0469 Q443.4063,331.0469 444,330.7813 Q444.5938,330.5 445.2188,329.9219 L445.2188,332.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="31" x="462.75" y="331.8467">Gray</text><line style="stroke:#181818;stroke-width:0.5;" x1="362" x2="562" y1="343" y2="343"/><line style="stroke:#181818;stroke-width:0.5;" x1="362" x2="562" y1="351" y2="351"/><ellipse cx="372" cy="364.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="381" y="367.9951">Gray()</text><ellipse cx="372" cy="380.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="381" y="384.292">verilog(file_path: str): void</text></g><!--MD5=[d8e9873004a19edea43cdbe6413562b5]
class GroupPGLogic--><g id="elem_GroupPGLogic"><rect codeLine="5" fill="#F1F1F1" height="227.2656" id="GroupPGLogic" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="406" x="22" y="7"/><ellipse cx="171.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M174.2188,28.6406 Q173.6406,28.9375 173,29.0781 Q172.3594,29.2344 171.6563,29.2344 Q169.1563,29.2344 167.8281,27.5938 Q166.5156,25.9375 166.5156,22.8125 Q166.5156,19.6875 167.8281,18.0313 Q169.1563,16.375 171.6563,16.375 Q172.3594,16.375 173,16.5313 Q173.6563,16.6875 174.2188,16.9844 L174.2188,19.7031 Q173.5938,19.125 173,18.8594 Q172.4063,18.5781 171.7813,18.5781 Q170.4375,18.5781 169.75,19.6563 Q169.0625,20.7188 169.0625,22.8125 Q169.0625,24.9063 169.75,25.9844 Q170.4375,27.0469 171.7813,27.0469 Q172.4063,27.0469 173,26.7813 Q173.5938,26.5 174.2188,25.9219 L174.2188,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="191.75" y="27.8467">GroupPGLogic</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="427" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="427" y1="47" y2="47"/><ellipse cx="33" cy="60.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="42" y="63.9951">GroupPGLogic(buswidth: int)</text><ellipse cx="33" cy="76.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="42" y="80.292">generate_block_matrix(): list[list]</text><ellipse cx="33" cy="93.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="42" y="96.5889">height(): int</text><ellipse cx="33" cy="109.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="42" y="112.8857">p_i_j(i: int, row: int): str</text><ellipse cx="33" cy="125.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="42" y="129.1826">g_i_j(i: int, row: int): str</text><ellipse cx="33" cy="142.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="286" x="42" y="145.4795">naming_wired(row: int, i: int, arg2: str): str</text><ellipse cx="33" cy="158.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="42" y="161.7764">input_i_j(r: int, c: int): tuple[int, int]</text><ellipse cx="33" cy="174.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="42" y="178.0732">output_i_j(r: int, c: int): tuple[int, int]</text><ellipse cx="33" cy="191.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="380" x="42" y="194.3701">black_block(r: int, c: int, block_in: int): tuple[list[str], str]</text><ellipse cx="33" cy="207.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="373" x="42" y="210.667">gray_block(r: int, c: int, block_in: int): tuple[list[str], str]</text><ellipse cx="33" cy="223.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="42" y="226.9639">verilog(file_path: str): void</text></g><!--MD5=[cabe6d6949dbe1ac9ad5f8d8cfacd15a]
link Black to Module--><g id="link_Black_Module"><path codeLine="8" d="M225,392.22 C225,403.95 225,417.69 225,432.6 " fill="none" id="Black-to-Module" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="232,432.8,225,452.8,218,432.8,232,432.8" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e1039265efff5f52c6c2757191c4644e]
link Gray to Module--><g id="link_Gray_Module"><path codeLine="8" d="M430.04,392.22 C419.64,405.14 407.28,420.49 393.87,437.16 " fill="none" id="Gray-to-Module" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="399.28,441.61,381.28,452.8,388.37,432.83,399.28,441.61" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b42ada8a4f8232bed48a4c6a9be2a31d]
link GroupPGLogic to Module--><g id="link_GroupPGLogic_Module"><path codeLine="19" d="M140.19,234.09 C126.1,258.3 113.61,284.59 106,311 C94.5,350.95 97.23,393.08 107.51,433.48 " fill="none" id="GroupPGLogic-to-Module" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="114.28,431.69,113.04,452.84,100.82,435.53,114.28,431.69" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3728fd606d21a0bedae975c5595c750d]
link GroupPGLogic to Black--><g id="link_GroupPGLogic_Black"><path codeLine="20" d="M225,234.32 C225,259.72 225,285.22 225,305.84 " fill="none" id="GroupPGLogic-to-Black" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="225,310.97,229,301.97,225,305.97,221,301.97,225,310.97" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="32" x="226" y="277.0669">Uses</text></g><!--MD5=[47f31c495e3356bce9e9c745c62b263e]
link GroupPGLogic to Gray--><g id="link_GroupPGLogic_Gray"><path codeLine="21" d="M341.76,234.32 C368.71,260.36 395.78,286.52 417.4,307.4 " fill="none" id="GroupPGLogic-to-Gray" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="421.09,310.97,417.3879,301.8434,417.4908,307.4993,411.8349,307.6022,421.09,310.97" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="32" x="386" y="277.0669">Uses</text></g><!--MD5=[cdcca40ac93c096d53a355de885347b0]
@startuml Adder_GroupPGLogic
!include verilog_Module_UML.puml
!include Adder_Black_UML.puml
!include Adder_Gray_UML.puml

class GroupPGLogic {
  + GroupPGLogic(buswidth: int)
  + generate_block_matrix(): list[list]
  + height(): int
  + p_i_j(i: int, row: int): str
  + g_i_j(i: int, row: int): str
  + naming_wired(row: int, i: int, arg2: str): str
  + input_i_j(r: int, c: int): tuple[int, int]
  + output_i_j(r: int, c: int): tuple[int, int]
  + black_block(r: int, c: int, block_in: int): tuple[list[str], str]
  + gray_block(r: int, c: int, block_in: int): tuple[list[str], str]
  + verilog(file_path: str): void
}

GroupPGLogic - -|> Module
GroupPGLogic - -> Black: Uses
GroupPGLogic - -> Gray: Uses

@enduml

@startuml Adder_GroupPGLogic

class Module {
  - start_instructions: list
  - instructions: list
  - end_instructions: list
  - module_name: str
  - instance_name: str
  - params: Param
  - ports: Signal
  - wires: list

  + __init__(module_name: str = '', instance_name: str = '')
  + add_port_string(ports: str): void
  + wire(name: str, _type: str): void
  + start(): void
  + end(): void
  + stmt_assign(lhs: str, rhs: str): void
  + instruction(instruction: str): void
  + comment(c: str): void
  + write(file_path: str, filename: str): void
  + instantiate(instance_name: str, inputs: list, outputs: list): str
  + __str__(): str
  + in_connector(port: str, connector: str): dict
  + out_connector(port: str, connector: str): dict
}


class Black {
  + Black()
  + verilog(file_path: str): void
}

Black - -|> Module

class Gray {
  + Gray()
  + verilog(file_path: str): void
}

Gray - -|> Module

class GroupPGLogic {
  + GroupPGLogic(buswidth: int)
  + generate_block_matrix(): list[list]
  + height(): int
  + p_i_j(i: int, row: int): str
  + g_i_j(i: int, row: int): str
  + naming_wired(row: int, i: int, arg2: str): str
  + input_i_j(r: int, c: int): tuple[int, int]
  + output_i_j(r: int, c: int): tuple[int, int]
  + black_block(r: int, c: int, block_in: int): tuple[list[str], str]
  + gray_block(r: int, c: int, block_in: int): tuple[list[str], str]
  + verilog(file_path: str): void
}

GroupPGLogic - -|> Module
GroupPGLogic - -> Black: Uses
GroupPGLogic - -> Gray: Uses

@enduml

PlantUML version 1.2022.7(Mon Aug 22 10:01:30 PDT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>