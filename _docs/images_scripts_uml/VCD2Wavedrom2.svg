<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1005px" preserveAspectRatio="none" style="width:1448px;height:1005px;background:#FFFFFF;" version="1.1" viewBox="0 0 1448 1005" width="1448px" zoomAndPan="magnify"><defs/><g><!--MD5=[e09d57fb07e510e69aeb3a38c1463f7a]
class V2WConvert--><g id="elem_V2WConvert"><rect codeLine="2" fill="#F1F1F1" height="162.0781" id="V2WConvert" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="711" x="159.5" y="728"/><ellipse cx="468.25" cy="744" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M471.2188,749.6406 Q470.6406,749.9375 470,750.0781 Q469.3594,750.2344 468.6563,750.2344 Q466.1563,750.2344 464.8281,748.5938 Q463.5156,746.9375 463.5156,743.8125 Q463.5156,740.6875 464.8281,739.0313 Q466.1563,737.375 468.6563,737.375 Q469.3594,737.375 470,737.5313 Q470.6563,737.6875 471.2188,737.9844 L471.2188,740.7031 Q470.5938,740.125 470,739.8594 Q469.4063,739.5781 468.7813,739.5781 Q467.4375,739.5781 466.75,740.6563 Q466.0625,741.7188 466.0625,743.8125 Q466.0625,745.9063 466.75,746.9844 Q467.4375,748.0469 468.7813,748.0469 Q469.4063,748.0469 470,747.7813 Q470.5938,747.5 471.2188,746.9219 L471.2188,749.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="488.75" y="748.8467">V2WConvert</text><line style="stroke:#181818;stroke-width:0.5;" x1="160.5" x2="869.5" y1="760" y2="760"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167.5" y="770.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="179.5" y="776.9951">cmn_unit: str</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167.5" y="786.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="179.5" y="793.292">cmn_base: str</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167.5" y="803.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="179.5" y="809.5889">ureg: UnitRegistry</text><line style="stroke:#181818;stroke-width:0.5;" x1="160.5" x2="869.5" y1="816.8906" y2="816.8906"/><ellipse cx="170.5" cy="830.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="179.5" y="833.8857">__init__()</text><ellipse cx="170.5" cy="846.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="685" x="179.5" y="850.1826">convert_timescale_to_cmn_units(value: int, current_timescale: str, cmn_unit: str, cmn_base: str): str</text><ellipse cx="170.5" cy="863.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="566" x="179.5" y="866.4795">calculate_sampling_points(vcd_timescale: str, target_interval: str, endtime: str): list</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167.5" y="876.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="364" x="179.5" y="882.7764">_convert_to_magnitude(time_base: str, units: str): int</text></g><!--MD5=[a82044a48e0df163fb877a0fcc908a96]
class UnitRegistry--><g id="elem_UnitRegistry"><rect fill="#F1F1F1" height="48" id="UnitRegistry" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115" x="457.5" y="950"/><ellipse cx="472.5" cy="966" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M475.4688,971.6406 Q474.8906,971.9375 474.25,972.0781 Q473.6094,972.2344 472.9063,972.2344 Q470.4063,972.2344 469.0781,970.5938 Q467.7656,968.9375 467.7656,965.8125 Q467.7656,962.6875 469.0781,961.0313 Q470.4063,959.375 472.9063,959.375 Q473.6094,959.375 474.25,959.5313 Q474.9063,959.6875 475.4688,959.9844 L475.4688,962.7031 Q474.8438,962.125 474.25,961.8594 Q473.6563,961.5781 473.0313,961.5781 Q471.6875,961.5781 471,962.6563 Q470.3125,963.7188 470.3125,965.8125 Q470.3125,967.9063 471,968.9844 Q471.6875,970.0469 473.0313,970.0469 Q473.6563,970.0469 474.25,969.7813 Q474.8438,969.5 475.4688,968.9219 L475.4688,971.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="486.5" y="970.8467">UnitRegistry</text><line style="stroke:#181818;stroke-width:0.5;" x1="458.5" x2="571.5" y1="982" y2="982"/><line style="stroke:#181818;stroke-width:0.5;" x1="458.5" x2="571.5" y1="990" y2="990"/></g><!--MD5=[9a6286723e1d6c676a2d90a17ff900ed]
class V2WConfig--><g id="elem_V2WConfig"><rect codeLine="3" fill="#F1F1F1" height="178.375" id="V2WConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1016" x="7" y="490"/><ellipse cx="473.25" cy="506" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M476.2188,511.6406 Q475.6406,511.9375 475,512.0781 Q474.3594,512.2344 473.6563,512.2344 Q471.1563,512.2344 469.8281,510.5938 Q468.5156,508.9375 468.5156,505.8125 Q468.5156,502.6875 469.8281,501.0313 Q471.1563,499.375 473.6563,499.375 Q474.3594,499.375 475,499.5313 Q475.6563,499.6875 476.2188,499.9844 L476.2188,502.7031 Q475.5938,502.125 475,501.8594 Q474.4063,501.5781 473.7813,501.5781 Q472.4375,501.5781 471.75,502.6563 Q471.0625,503.7188 471.0625,505.8125 Q471.0625,507.9063 471.75,508.9844 Q472.4375,510.0469 473.7813,510.0469 Q474.4063,510.0469 475,509.7813 Q475.5938,509.5 476.2188,508.9219 L476.2188,511.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="493.75" y="510.8467">V2WConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="1022" y1="522" y2="522"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="532.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="27" y="538.9951">config: dict</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="548.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="27" y="555.292">converter: V2WConvert</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="565.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="27" y="571.5889">vcd: VCDVCD</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="1022" y1="578.8906" y2="578.8906"/><ellipse cx="18" cy="592.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="27" y="595.8857">__init__(argv: list)</text><ellipse cx="18" cy="608.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277" x="27" y="612.1826">group_and_sort_signals(signals: list): list</text><ellipse cx="18" cy="625.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="27" y="628.4795">argparse(argv: list)</text><ellipse cx="18" cy="641.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="27" y="644.7764">generate_config()</text><ellipse cx="18" cy="657.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="990" x="27" y="661.0732">loop_and_find_sigs_clks(vcd: dict, signals: set, clocks: set, clock_periods: dict, timescale: str, base_unit: str, cmn_unit: str, cmn_base: str): tuple</text></g><!--MD5=[2d36b8a12244ace85cc6dd8457e7f599]
class VCDVCD--><g id="elem_VCDVCD"><rect fill="#F1F1F1" height="48" id="VCDVCD" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="92" x="968" y="785"/><ellipse cx="983" cy="801" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M985.9688,806.6406 Q985.3906,806.9375 984.75,807.0781 Q984.1094,807.2344 983.4063,807.2344 Q980.9063,807.2344 979.5781,805.5938 Q978.2656,803.9375 978.2656,800.8125 Q978.2656,797.6875 979.5781,796.0313 Q980.9063,794.375 983.4063,794.375 Q984.1094,794.375 984.75,794.5313 Q985.4063,794.6875 985.9688,794.9844 L985.9688,797.7031 Q985.3438,797.125 984.75,796.8594 Q984.1563,796.5781 983.5313,796.5781 Q982.1875,796.5781 981.5,797.6563 Q980.8125,798.7188 980.8125,800.8125 Q980.8125,802.9063 981.5,803.9844 Q982.1875,805.0469 983.5313,805.0469 Q984.1563,805.0469 984.75,804.7813 Q985.3438,804.5 985.9688,803.9219 L985.9688,806.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="997" y="805.8467">VCDVCD</text><line style="stroke:#181818;stroke-width:0.5;" x1="969" x2="1059" y1="817" y2="817"/><line style="stroke:#181818;stroke-width:0.5;" x1="969" x2="1059" y1="825" y2="825"/></g><!--MD5=[e7e9d803b8242d3af493fa63de708093]
class VCD2Wavedrom2--><g id="elem_VCD2Wavedrom2"><rect codeLine="4" fill="#F1F1F1" height="422.8281" id="VCD2Wavedrom2" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="730" x="711" y="7"/><ellipse cx="1011.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1014.2188,28.6406 Q1013.6406,28.9375 1013,29.0781 Q1012.3594,29.2344 1011.6563,29.2344 Q1009.1563,29.2344 1007.8281,27.5938 Q1006.5156,25.9375 1006.5156,22.8125 Q1006.5156,19.6875 1007.8281,18.0313 Q1009.1563,16.375 1011.6563,16.375 Q1012.3594,16.375 1013,16.5313 Q1013.6563,16.6875 1014.2188,16.9844 L1014.2188,19.7031 Q1013.5938,19.125 1013,18.8594 Q1012.4063,18.5781 1011.7813,18.5781 Q1010.4375,18.5781 1009.75,19.6563 Q1009.0625,20.7188 1009.0625,22.8125 Q1009.0625,24.9063 1009.75,25.9844 Q1010.4375,27.0469 1011.7813,27.0469 Q1012.4063,27.0469 1013,26.7813 Q1013.5938,26.5 1014.2188,25.9219 L1014.2188,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="1031.75" y="27.8467">VCD2Wavedrom2</text><line style="stroke:#181818;stroke-width:0.5;" x1="712" x2="1440" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="719" y="49.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="731" y="55.9951">busregex: Regex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="719" y="65.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="731" y="72.292">v2wconfig: V2WConfig</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="719" y="82.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="731" y="88.5889">config: dict</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="719" y="98.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="731" y="104.8857">converter: Converter</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="719" y="114.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="731" y="121.1826">vcd: VCDVCD</text><line style="stroke:#181818;stroke-width:0.5;" x1="712" x2="1440" y1="128.4844" y2="128.4844"/><ellipse cx="722" cy="142.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="731" y="145.4795">__init__(argv: list)</text><ellipse cx="722" cy="158.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="731" y="161.7764">find_max_time_in_vcd(vcd: dict): int</text><ellipse cx="722" cy="174.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="407" x="731" y="178.0732">homogenize_waves(vcd_dict: dict, sample_points: list): dict</text><ellipse cx="722" cy="191.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="731" y="194.3701">includewave(wave: str): bool</text><ellipse cx="722" cy="207.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="322" x="731" y="210.667">samplenow(tick: int, sample_window: str): bool</text><ellipse cx="722" cy="223.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="731" y="226.9639">parse_gtkw_file(gtkw_file: str): list</text><ellipse cx="722" cy="239.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="514" x="731" y="243.2607">build_wave_drom_structure(group_structure: list, signal_rec_dict: dict): dict</text><ellipse cx="722" cy="256.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="564" x="731" y="259.5576">create_signal_records(vcd_dict: dict, vcd_dict_types: dict, sample_points: list): dict</text><ellipse cx="722" cy="272.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="517" x="731" y="275.8545">find_closest_data_point(sample_points: list, waveform_data: list): Generator</text><ellipse cx="722" cy="288.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="227" x="731" y="292.1514">wave_is_a_clock(wave: str): tuple</text><ellipse cx="722" cy="305.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="483" x="731" y="308.4482">process_clk_signal(wave: str, phase: int, period_wd: str, char: str): dict</text><ellipse cx="722" cy="321.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="704" x="731" y="324.7451">process_signal(wave: str, phase: int, waveform_data: list, vcd_dict_types: dict, sample_points: list): dict</text><ellipse cx="722" cy="337.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="693" x="731" y="341.042">create_waveform_record(wave: str, waveform_data: list, vcd_dict_types: dict, sample_points: list): dict</text><ellipse cx="722" cy="353.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="731" y="357.3389">determine_phase(signal: str): int</text><ellipse cx="722" cy="370.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="626" x="731" y="373.6357">process_signal_value(signal_rec: dict, j: tuple, isbus: bool, lastval: str, wave_type: str): tuple</text><ellipse cx="722" cy="386.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="528" x="731" y="389.9326">finalize_wave_drom_structure(group_structure: list, signal_rec_dict: dict): dict</text><ellipse cx="722" cy="402.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="678" x="731" y="406.2295">dump_wavedrom(vcd_dict: dict, vcd_dict_types: dict, sample_points: list, group_structure: list): dict</text><ellipse cx="722" cy="419.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="731" y="422.5264">execute(group_structure: list): dict</text></g><!--MD5=[0ebf3a0931d150882cc1e7ba90c00938]
class Converter--><g id="elem_Converter"><rect fill="#F1F1F1" height="48" id="Converter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="100" x="1129" y="555"/><ellipse cx="1144" cy="571" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1146.9688,576.6406 Q1146.3906,576.9375 1145.75,577.0781 Q1145.1094,577.2344 1144.4063,577.2344 Q1141.9063,577.2344 1140.5781,575.5938 Q1139.2656,573.9375 1139.2656,570.8125 Q1139.2656,567.6875 1140.5781,566.0313 Q1141.9063,564.375 1144.4063,564.375 Q1145.1094,564.375 1145.75,564.5313 Q1146.4063,564.6875 1146.9688,564.9844 L1146.9688,567.7031 Q1146.3438,567.125 1145.75,566.8594 Q1145.1563,566.5781 1144.5313,566.5781 Q1143.1875,566.5781 1142.5,567.6563 Q1141.8125,568.7188 1141.8125,570.8125 Q1141.8125,572.9063 1142.5,573.9844 Q1143.1875,575.0469 1144.5313,575.0469 Q1145.1563,575.0469 1145.75,574.7813 Q1146.3438,574.5 1146.9688,573.9219 L1146.9688,576.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="1158" y="575.8467">Converter</text><line style="stroke:#181818;stroke-width:0.5;" x1="1130" x2="1228" y1="587" y2="587"/><line style="stroke:#181818;stroke-width:0.5;" x1="1130" x2="1228" y1="595" y2="595"/></g><!--MD5=[aa9da4873eccfd6533cf43afe1947541]
link V2WConvert to UnitRegistry--><g id="link_V2WConvert_UnitRegistry"><path codeLine="13" d="M515,890.07 C515,909.74 515,929.53 515,944.84 " fill="none" id="V2WConvert-to-UnitRegistry" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="515,949.85,519,940.85,515,944.85,511,940.85,515,949.85" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5e1512636e8f98c51d464d5d829e9c4f]
link V2WConfig to V2WConvert--><g id="link_V2WConfig_V2WConvert"><path codeLine="15" d="M515,668.15 C515,686.13 515,705.02 515,722.9 " fill="none" id="V2WConfig-to-V2WConvert" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="515,727.91,519,718.91,515,722.91,511,718.91,515,727.91" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e5fad2f9fe7b0189cc83c3603f58f846]
link V2WConfig to VCDVCD--><g id="link_V2WConfig_VCDVCD"><path codeLine="16" d="M756.24,668 C800.72,686.39 846.26,706.71 888,728 C919.2,743.92 952.58,765.33 977.14,782 " fill="none" id="V2WConfig-to-VCDVCD" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="981.32,784.84,976.1364,776.4656,977.1886,782.0238,971.6304,783.0759,981.32,784.84" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[df1d766f4ecd040a8ae449ed1c837488]
link VCD2Wavedrom2 to V2WConfig--><g id="link_VCD2Wavedrom2_V2WConfig"><path codeLine="31" d="M746.42,430.11 C715.4,449.93 685.21,469.23 657.43,486.98 " fill="none" id="VCD2Wavedrom2-to-V2WConfig" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="652.99,489.82,662.7259,488.3329,657.2001,487.1227,658.4103,481.5968,652.99,489.82" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[530386b5a08a4d7985174bd4ca7e61cf]
link VCD2Wavedrom2 to Converter--><g id="link_VCD2Wavedrom2_Converter"><path codeLine="32" d="M1136.51,430.11 C1150.2,477.75 1163.01,522.34 1170.91,549.85 " fill="none" id="VCD2Wavedrom2-to-Converter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1172.33,554.78,1173.6768,545.0237,1170.9432,549.9762,1165.9907,547.2426,1172.33,554.78" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c58a39b2d6c021757289c6a70d0930e3]
link VCD2Wavedrom2 to VCDVCD--><g id="link_VCD2Wavedrom2_VCDVCD"><path codeLine="33" d="M1063.61,430.17 C1057.99,505.4 1050.26,590.66 1040,668 C1034.83,706.99 1026.04,751.59 1020.13,779.77 " fill="none" id="VCD2Wavedrom2-to-VCDVCD" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1019.06,784.83,1024.8236,776.8437,1020.0872,779.9366,1016.9942,775.2002,1019.06,784.83" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[76d2c41765ab0fbdb0c7b9352b3d8319]
@startuml VCD2Wavedrom2
!include v2wconvert_UML.puml
!include v2wconfig_UML.puml

class VCD2Wavedrom2 {
    - busregex: Regex
    - v2wconfig: V2WConfig
    - config: dict
    - converter: Converter
    - vcd: VCDVCD

    + __init__(argv: list)
    + find_max_time_in_vcd(vcd: dict): int
    + homogenize_waves(vcd_dict: dict, sample_points: list): dict
    + includewave(wave: str): bool
    + samplenow(tick: int, sample_window: str): bool
    + parse_gtkw_file(gtkw_file: str): list
    + build_wave_drom_structure(group_structure: list, signal_rec_dict: dict): dict
    + create_signal_records(vcd_dict: dict, vcd_dict_types: dict, sample_points: list): dict
    + find_closest_data_point(sample_points: list, waveform_data: list): Generator
    + wave_is_a_clock(wave: str): tuple
    + process_clk_signal(wave: str, phase: int, period_wd: str, char: str): dict
    + process_signal(wave: str, phase: int, waveform_data: list, vcd_dict_types: dict, sample_points: list): dict
    + create_waveform_record(wave: str, waveform_data: list, vcd_dict_types: dict, sample_points: list): dict
    + determine_phase(signal: str): int
    + process_signal_value(signal_rec: dict, j: tuple, isbus: bool, lastval: str, wave_type: str): tuple
    + finalize_wave_drom_structure(group_structure: list, signal_rec_dict: dict): dict
    + dump_wavedrom(vcd_dict: dict, vcd_dict_types: dict, sample_points: list, group_structure: list): dict
    + execute(group_structure: list): dict
}

VCD2Wavedrom2 - -> V2WConfig
VCD2Wavedrom2 - -> Converter
VCD2Wavedrom2 - -> VCDVCD

@enduml

@startuml VCD2Wavedrom2

class V2WConvert {
    - cmn_unit: str
    - cmn_base: str
    - ureg: UnitRegistry

    + __init__()
    + convert_timescale_to_cmn_units(value: int, current_timescale: str, cmn_unit: str, cmn_base: str): str
    + calculate_sampling_points(vcd_timescale: str, target_interval: str, endtime: str): list
    - _convert_to_magnitude(time_base: str, units: str): int
}

V2WConvert - -> UnitRegistry


class V2WConfig {
    - config: dict
    - converter: V2WConvert
    - vcd: VCDVCD

    + __init__(argv: list)
    + group_and_sort_signals(signals: list): list
    + argparse(argv: list)
    + generate_config()
    + loop_and_find_sigs_clks(vcd: dict, signals: set, clocks: set, clock_periods: dict, timescale: str, base_unit: str, cmn_unit: str, cmn_base: str): tuple
}

V2WConfig - -> V2WConvert
V2WConfig - -> VCDVCD


class VCD2Wavedrom2 {
    - busregex: Regex
    - v2wconfig: V2WConfig
    - config: dict
    - converter: Converter
    - vcd: VCDVCD

    + __init__(argv: list)
    + find_max_time_in_vcd(vcd: dict): int
    + homogenize_waves(vcd_dict: dict, sample_points: list): dict
    + includewave(wave: str): bool
    + samplenow(tick: int, sample_window: str): bool
    + parse_gtkw_file(gtkw_file: str): list
    + build_wave_drom_structure(group_structure: list, signal_rec_dict: dict): dict
    + create_signal_records(vcd_dict: dict, vcd_dict_types: dict, sample_points: list): dict
    + find_closest_data_point(sample_points: list, waveform_data: list): Generator
    + wave_is_a_clock(wave: str): tuple
    + process_clk_signal(wave: str, phase: int, period_wd: str, char: str): dict
    + process_signal(wave: str, phase: int, waveform_data: list, vcd_dict_types: dict, sample_points: list): dict
    + create_waveform_record(wave: str, waveform_data: list, vcd_dict_types: dict, sample_points: list): dict
    + determine_phase(signal: str): int
    + process_signal_value(signal_rec: dict, j: tuple, isbus: bool, lastval: str, wave_type: str): tuple
    + finalize_wave_drom_structure(group_structure: list, signal_rec_dict: dict): dict
    + dump_wavedrom(vcd_dict: dict, vcd_dict_types: dict, sample_points: list, group_structure: list): dict
    + execute(group_structure: list): dict
}

VCD2Wavedrom2 - -> V2WConfig
VCD2Wavedrom2 - -> Converter
VCD2Wavedrom2 - -> VCDVCD

@enduml

PlantUML version 1.2022.7(Mon Aug 22 10:01:30 PDT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>